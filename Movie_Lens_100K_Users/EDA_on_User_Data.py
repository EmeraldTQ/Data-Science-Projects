# -*- coding: utf-8 -*-
"""Movie_Lens_100K_Users_Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13RTVc6FuxqwKr3Bnk-Ohg6J3h6CB6HZN

Dataset : https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user

##1. Import the necessary libraries
"""

import pandas as pd

"""##2. Import the dataset from this [address](https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user)."""

url = "https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user"

"""##3. Assign it to a variable called users and use the 'user_id' as index"""

users = pd.read_csv(url, sep="|", index_col="user_id") # Use '|' as separator

"""##4. See the first 25 entries"""

print(users.head(25))

"""##5. See the last 10 entries"""

users.tail(10)

"""##6. Number of observations in the dataset"""

print("Number of observations:", users.shape[0]) # 0 = row = observations

print("Number of observations:", len(users)) #alternative way to get row

"""##7. Number of columns in the dataset"""

print("Number of observations:", users.shape[1]) # 1 = column = features

"""##8. Print the name of all the columns"""

print(users.columns)

print(list(users.columns))

"""##9. How the dataset is indexed"""

print(users.index) # Index = Labels

"""##10. Data type of each column"""

print(users.dtypes)

print(users.info()) #More detail

"""##11. Print only the occupation column"""

print(users["occupation"])

#print(users.occupation) for without no space or special characteristic

"""##12. No. of different occupations in the dataset"""

num_occupations = users["occupation"].nunique()
print("Number of different occupations:", num_occupations)

print(users["occupation"].unique())

"""##13. Most frequent occupation"""

users["occupation"].value_counts().idxmax()

users["occupation"].value_counts() #no. of occurence for all occupation

"""### Step 14. Summarize the DataFrame"""

print(users.describe())

users.describe()

"""##15. Summarize all the columns"""

users.describe(include="all")

print(users.describe(include="all"))

"""##16. Summarize only the occupation column"""

print(users["occupation"].describe())

"""##17. Mean age of users"""

users["age"].mean()

int(users["age"].mean())

"""##18. Age with least occurrence"""

users["age"].value_counts().idxmin()

least_frequent_ages = users["age"].value_counts()
min_occurrence = least_frequent_ages.min()  # Find the minimum count
least_common_ages = least_frequent_ages[least_frequent_ages == min_occurrence]  # Filter ages

print("Ages with the least occurrence:\n", least_common_ages)